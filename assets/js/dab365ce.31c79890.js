"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1103],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),p=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(n),d=r,f=m["".concat(s,".").concat(d)]||m[d]||u[d]||a;return n?o.createElement(f,i(i({ref:t},c),{},{components:n})):o.createElement(f,i({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7700:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return u}});var o=n(3117),r=n(102),a=(n(7294),n(3905)),i=["components"],l={title:"Export \u26a1\ufe0f",sidebar_position:27},s=void 0,p={unversionedId:"commands/export",id:"commands/export",title:"Export \u26a1\ufe0f",description:"In case your project outgrows the cabapilities of Scala CLI (e.g support for modules) it may be beneficial",source:"@site/docs/commands/export.md",sourceDirName:"commands",slug:"/commands/export",permalink:"/docs/commands/export",draft:!1,editUrl:"https://github.com/Virtuslab/scala-cli/edit/main/website/docs/commands/export.md",tags:[],version:"current",sidebarPosition:27,frontMatter:{title:"Export \u26a1\ufe0f",sidebar_position:27},sidebar:"tutorialSidebar",previous:{title:"Shebang",permalink:"/docs/commands/shebang"},next:{title:"Package \u26a1\ufe0f",permalink:"/docs/commands/package"}},c={},u=[],m={toc:u};function d(e){var t=e.components,n=(0,r.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"In case your project outgrows the cabapilities of Scala CLI (e.g support for modules) it may be beneficial\nto switch to a build tool such as SBT or Mill.\nThe ",(0,a.kt)("inlineCode",{parentName:"p"},"export")," sub-command allows to do that by converting a Scala CLI project into an SBT or Mill configuration.\nAdditionally the sub-command supports the JSON format for custom analysis of projects."),(0,a.kt)("p",null,"Results of running the sub-command are, by default, put in ",(0,a.kt)("inlineCode",{parentName:"p"},"./dest/"),",\nthat behaviour can be modified by specifying a path with the ",(0,a.kt)("inlineCode",{parentName:"p"},"--output")," option."),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"The ",(0,a.kt)("inlineCode",{parentName:"p"},"export")," sub-command is restricted and requires setting the ",(0,a.kt)("inlineCode",{parentName:"p"},"--power")," option to be used.\nYou can pass it explicitly or set it globally by running:\nscala-cli config power true")),(0,a.kt)("p",null,"The project configuration is read both from information specified in source files\nas well as options passed to the ",(0,a.kt)("inlineCode",{parentName:"p"},"export")," sub-command."),(0,a.kt)("p",null,"Let's take a simple one-file project as an example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala",metastring:"title=Hello.scala",title:"Hello.scala"},'//> using scala "3.1.3"\n//> using option "-Xasync"\n//> using dep "com.lihaoyi::os-lib:0.9.0"\n\nobject Hello {\n  def main(args: Array[String]): Unit =\n    println(os.pwd)\n}\n')),(0,a.kt)("h1",{id:"exporting-to-sbt"},"Exporting to SBT:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"scala-cli --power export Hello.scala --sbt\n")),(0,a.kt)("p",null,"Note that ",(0,a.kt)("inlineCode",{parentName:"p"},"--sbt")," is not required here since it's the default."),(0,a.kt)("p",null,"The result is an sbt-compliant project created in the ",(0,a.kt)("inlineCode",{parentName:"p"},"dest/")," directory:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"dest\n\u251c\u2500\u2500 project\n\u2502   \u2514\u2500\u2500 build.properties\n\u251c\u2500\u2500 src\n\u2502   \u2514\u2500\u2500 main\n\u2502       \u2514\u2500\u2500 scala\n\u2502           \u2514\u2500\u2500 Hello.scala\n\u2514\u2500\u2500 build.sbt\n")),(0,a.kt)("p",null,"All the project's configuration resides now in ",(0,a.kt)("inlineCode",{parentName:"p"},"dest/build.sbt"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala",metastring:"title=dest/build.sbt",title:"dest/build.sbt"},'scalaVersion := "3.1.3"\n\nscalacOptions ++= Seq("-Xasync")\n\nlibraryDependencies += "com.lihaoyi" %% "os-lib" % "0.9.0" \n\nlibraryDependencies += "com.lihaoyi" %% "os-lib" % "0.9.0" % Test\n\n')),(0,a.kt)("p",null,"To configure the version of SBT used in the new project provide the ",(0,a.kt)("inlineCode",{parentName:"p"},"--sbtVersion")," option to the ",(0,a.kt)("inlineCode",{parentName:"p"},"export")," sub-command."),(0,a.kt)("h1",{id:"exporting-to-mill"},"Exporting to Mill:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"scala-cli --power export Hello.scala --mill --output=dest_mill\n")),(0,a.kt)("p",null,"Mill is not the default ",(0,a.kt)("inlineCode",{parentName:"p"},"export")," format, so passing the ",(0,a.kt)("inlineCode",{parentName:"p"},"--mill")," option is required."),(0,a.kt)("p",null,"By specifying the path with ",(0,a.kt)("inlineCode",{parentName:"p"},"--output")," option the results are now created in ",(0,a.kt)("inlineCode",{parentName:"p"},"dest_mill/")," directory:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"dest_mill\n\u251c\u2500\u2500 project\n\u2502   \u2514\u2500\u2500 src\n\u2502       \u2514\u2500\u2500 Hello.scala\n\u251c\u2500\u2500 .mill-version\n\u251c\u2500\u2500 build.sc\n\u251c\u2500\u2500 mill\n\u2514\u2500\u2500 mill.bat\n")),(0,a.kt)("p",null,"And all the project's configuration resides now in ",(0,a.kt)("inlineCode",{parentName:"p"},"dest_mill/build.sc"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala",metastring:"title=dest_mill/build.sc",title:"dest_mill/build.sc"},'import mill._\nimport mill.scalalib._\nobject project extends ScalaModule {\n  def scalaVersion = "3.1.3"\n  def scalacOptions = super.scalacOptions() ++ Seq("-Xasync")\n  def ivyDeps = super.ivyDeps() ++ Seq(\n    ivy"com.lihaoyi::os-lib:0.9.0"\n  )\n\n  object test extends Tests {\n    def ivyDeps = super.ivyDeps() ++ Seq(\n      ivy"com.lihaoyi::os-lib:0.9.0"\n    )\n  }\n}\n\n')),(0,a.kt)("p",null,"The script files ",(0,a.kt)("inlineCode",{parentName:"p"},"mill")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"mill.bat")," are mill wrappers fetched from ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/lefou/millw/tree/166bcdf5741de8569e0630e18c3b2ef7e252cd96"},"lefou/millw repository"),".\nTo change the build tool version used override the contents of ",(0,a.kt)("inlineCode",{parentName:"p"},"dest_mill/.mill-version"),"."),(0,a.kt)("h1",{id:"exporting-to-json"},"Exporting to JSON:"),(0,a.kt)("p",null,"To export project information in a human-comprehensible format, use the ",(0,a.kt)("inlineCode",{parentName:"p"},"--json")," flag."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"scala-cli --power export Hello.scala --json --output=dest_json\n")),(0,a.kt)("p",null,"The result is the ",(0,a.kt)("inlineCode",{parentName:"p"},"dest_json/export.json")," file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:"title=dest_json/export.json",title:"dest_json/export.json"},'{\n "scalaVersion": "3.1.3",\n "platform": "JVM",\n "scopes": {\n  "main": {\n   "sources": [\n    "Foo.scala"\n   ],\n   "scalacOptions": [\n    "-Xasync"\n   ],\n   "dependencies": [\n    {\n     "groupId": "com.lihaoyi",\n     "artifactId": {\n      "name": "os-lib",\n      "fullName": "os-lib_3"\n     },\n     "version": "0.9.0"\n    }\n   ],\n   "resolvers": [\n    "https://repo1.maven.org/maven2",\n    "ivy:file:///Users/mgajek/Library/Caches/ScalaCli/local-repo/v0.1.20-111-648755-DIRTY2ba64fdc//[organisation]/[module]/(scala_[scalaVersion]/)(sbt_[sbtVersion]/)[revision]/[type]s/[artifact](-[classifier]).[ext]",\n    "ivy:file:/Users/mgajek/.ivy2/local/[organisation]/[module]/(scala_[scalaVersion]/)(sbt_[sbtVersion]/)[revision]/[type]s/[artifact](-[classifier]).[ext]"\n   ]\n  }\n }\n}\n')))}d.isMDXComponent=!0}}]);