"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2005],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=o,g=d["".concat(p,".").concat(m)]||d[m]||u[m]||i;return n?r.createElement(g,a(a({ref:t},c),{},{components:n})):r.createElement(g,a({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var l=2;l<i;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3602:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return u}});var r=n(3117),o=n(102),i=(n(7294),n(3905)),a=["components"],s={title:"Repositories and HTTP Proxies \u26a1\ufe0f",sidebar_position:51},p=void 0,l={unversionedId:"guides/repositories",id:"guides/repositories",title:"Repositories and HTTP Proxies \u26a1\ufe0f",description:"Scala CLI downloads the dependencies declared in your projects using Coursier.",source:"@site/docs/guides/repositories.md",sourceDirName:"guides",slug:"/guides/repositories",permalink:"/docs/guides/repositories",draft:!1,editUrl:"https://github.com/Virtuslab/scala-cli/edit/main/website/docs/guides/repositories.md",tags:[],version:"current",sidebarPosition:51,frontMatter:{title:"Repositories and HTTP Proxies \u26a1\ufe0f",sidebar_position:51},sidebar:"tutorialSidebar",previous:{title:"Offline mode \u26a1\ufe0f",permalink:"/docs/guides/offline"},next:{title:"Markdown \u26a1\ufe0f",permalink:"/docs/guides/markdown"}},c={},u=[{value:"Custom repositories",id:"custom-repositories",level:2},{value:"Repository Authentication",id:"repository-authentication",level:2},{value:"Default repositories",id:"default-repositories",level:2},{value:"HTTP proxies",id:"http-proxies",level:2},{value:"Configuration",id:"configuration",level:3},{value:"Authentication",id:"authentication",level:3},{value:"Mirrors",id:"mirrors",level:2}],d={toc:u};function m(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Scala CLI downloads the dependencies declared in your projects using ",(0,i.kt)("a",{parentName:"p",href:"https://get-coursier.io/"},"Coursier"),".\nThe default repositories being searched are the Maven Central and local Ivy repository on your machine.\nIf additional repositories are required it is possible to declare them:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"on the command line with ",(0,i.kt)("inlineCode",{parentName:"li"},"--repository")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"--repo")," or just ",(0,i.kt)("inlineCode",{parentName:"li"},"-r")),(0,i.kt)("li",{parentName:"ul"},"with the ",(0,i.kt)("inlineCode",{parentName:"li"},"//> using repositories")," directive")),(0,i.kt)("p",null,"The values can be names of predefined repositories accepted by Coursier, some of which are:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"sonatype:_value_")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"sonatype-s01:_value_")," for Sonatype servers e.g. ",(0,i.kt)("inlineCode",{parentName:"li"},"sonatype:snapshots"),"\nsnapshots from both servers are searched when using ",(0,i.kt)("inlineCode",{parentName:"li"},"snapshots")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"jitpack")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"m2Local"))),(0,i.kt)("h2",{id:"custom-repositories"},"Custom repositories"),(0,i.kt)("p",null,"Supplying the address of custom repositories is also accepted when using ",(0,i.kt)("inlineCode",{parentName:"p"},"--repository")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"//> using repositories"),".\nTo do so, provide the URL to the repository's root, e.g. ",(0,i.kt)("inlineCode",{parentName:"p"},"https://maven.pkg.github.com/USER/REPO")," for GitHub Package Registry.\nBy default, custom repositories are treated as Maven repositories, to specify an Ivy repository, prefix the address with ",(0,i.kt)("inlineCode",{parentName:"p"},"ivy:")," and supply the ivy pattern at the end e.g. ",(0,i.kt)("inlineCode",{parentName:"p"},"ivy:http://localhost:8081/repository/ivy-releases/[defaultPattern]"),"."),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("inlineCode",{parentName:"p"},"[defaultPattern]")," gets expanded by Coursier to: "),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-text"},"    [organisation]/[module]/(scala_[scalaVersion]/)(sbt_[sbtVersion]/)[revision]/[type]s/[artifact](-[classifier]).[ext]\n"))),(0,i.kt)("h2",{id:"repository-authentication"},"Repository Authentication"),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"Even though the ",(0,i.kt)("inlineCode",{parentName:"p"},"config")," command is not restricted, some available configuration keys may be, and thus may\nrequire setting the ",(0,i.kt)("inlineCode",{parentName:"p"},"--power")," option to be used.\nThat includes the configuration key tied to repositories settings, like ",(0,i.kt)("inlineCode",{parentName:"p"},"repositories.credentials")," and others.\nYou can pass the ",(0,i.kt)("inlineCode",{parentName:"p"},"--power")," option explicitly or set it globally by running:"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-bash",metastring:"ignore",ignore:!0},"scala-cli config power true\n"))),(0,i.kt)("p",null,"Repository authentication is also supported and there are a couple ways of using it:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"specifying credentials for each host in ",(0,i.kt)("inlineCode",{parentName:"li"},"COURSIER_CREDENTIALS")," environment variable or in the ",(0,i.kt)("inlineCode",{parentName:"li"},"coursier.credentials")," java property (",(0,i.kt)("a",{parentName:"li",href:"/docs/guides/java-properties"},"read more here"),"),\nthe supported format in this case is ",(0,i.kt)("inlineCode",{parentName:"li"},"host-address username:password"),", e.g. ",(0,i.kt)("inlineCode",{parentName:"li"},"my_domain.com MyUserName:myPasswOrd")),(0,i.kt)("li",{parentName:"ul"},"adding config entries for each host, this can be done using ",(0,i.kt)("inlineCode",{parentName:"li"},"scala-cli --power config repositories.credentials host _username_ _password_"),",\nusername and password values should follow the ",(0,i.kt)("a",{parentName:"li",href:"/docs/reference/password-options"},"password option format"),", e.g. ")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash",metastring:"ignore",ignore:!0},"  scala-cli --power config repositories.credentials maven.pkg.github.com value:PrivateToken env:GH_TOKEN\n")),(0,i.kt)("h2",{id:"default-repositories"},"Default repositories"),(0,i.kt)("p",null,"You can override the default Coursier repositories globally by invoking:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash",metastring:"ignore",ignore:!0},"scala-cli --power config repositories.default https://first-repo.company.com https://second-repo.company.com\n")),(0,i.kt)("h2",{id:"http-proxies"},"HTTP proxies"),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"Even though the ",(0,i.kt)("inlineCode",{parentName:"p"},"config")," command is not restricted, some available configuration keys may be, and thus may\nrequire setting the ",(0,i.kt)("inlineCode",{parentName:"p"},"--power")," option to be used.\nThat includes configuration keys tied to setting up proxies, like ",(0,i.kt)("inlineCode",{parentName:"p"},"httpProxy.address")," and others.\nYou can pass the ",(0,i.kt)("inlineCode",{parentName:"p"},"--power")," option explicitly or set it globally by running:"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-bash",metastring:"ignore",ignore:!0},"scala-cli config power true\n"))),(0,i.kt)("h3",{id:"configuration"},"Configuration"),(0,i.kt)("p",null,"If you can only download artifacts through a proxy, you need to configure it beforehand, like"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash",metastring:"ignore",ignore:!0},"scala-cli --power config httpProxy.address http://proxy.company.com\n")),(0,i.kt)("p",null,"Replace ",(0,i.kt)("inlineCode",{parentName:"p"},"proxy.company.com")," by the address of your proxy."),(0,i.kt)("p",null,"Change ",(0,i.kt)("inlineCode",{parentName:"p"},"http://")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"https://")," if your proxy is accessible via HTTPS."),(0,i.kt)("h3",{id:"authentication"},"Authentication"),(0,i.kt)("p",null,"If your proxy requires authentication, set your user and password with"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash",metastring:"ignore",ignore:!0},"scala-cli --power config httpProxy.user value:_encoded_user_\nscala-cli --power config httpProxy.password value:_encoded_password_\n")),(0,i.kt)("p",null,"Replace ",(0,i.kt)("inlineCode",{parentName:"p"},"_encoded_user_")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"_encoded_password_")," by your actual user and password, following\nthe ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/password-options"},"password option format"),". They should typically look like\n",(0,i.kt)("inlineCode",{parentName:"p"},"env:ENV_VAR_NAME"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"file:/path/to/file"),", or ",(0,i.kt)("inlineCode",{parentName:"p"},"command:command to run"),"."),(0,i.kt)("h2",{id:"mirrors"},"Mirrors"),(0,i.kt)("p",null,"If you're fine directly downloading artifacts from the internet, but would rather have some\nrepositories requests go through a repository of yours, configure mirror repositories, like"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash",metastring:"ignore",ignore:!0},"scala-cli --power config repositories.mirrors https://repo1.maven.org/maven2=https://repository.company.com/maven\n")),(0,i.kt)("p",null,"To have all requests to a Maven repository go through a repository of yours, do"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash",metastring:"ignore",ignore:!0},"scala-cli --power config repositories.mirrors maven:*=https://repository.company.com/maven\n")))}m.isMDXComponent=!0}}]);