"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4262],{9705:function(e,t,a){a.d(t,{m:function(){return l},v:function(){return s}});var n=a(7294),r=a(2004);function s(e){var t=e.children;return n.createElement("div",{className:"runnable-command"},t)}function l(e){var t=e.url;return n.createElement(r.Z,{playing:!0,loop:!0,muted:!0,controls:!0,width:"100%",height:"",url:t})}},3674:function(e,t,a){a.r(t),a.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return g},frontMatter:function(){return o},metadata:function(){return m},toc:function(){return u}});var n=a(3117),r=a(102),s=(a(7294),a(3905)),l=a(9705),i=["components"],o={title:"REPL",sidebar_position:8},c=void 0,m={unversionedId:"commands/repl",id:"commands/repl",title:"REPL",description:"The repl command starts a Scala REPL, which lets you interactively run your code and inspect its results:",source:"@site/docs/commands/repl.md",sourceDirName:"commands",slug:"/commands/repl",permalink:"/docs/commands/repl",draft:!1,editUrl:"https://github.com/Virtuslab/scala-cli/edit/main/website/docs/commands/repl.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{title:"REPL",sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"Test",permalink:"/docs/commands/test"},next:{title:"IDE Setup",permalink:"/docs/commands/setup-ide"}},p={},u=[],d={toc:u};function g(e){var t=e.components,a=(0,r.Z)(e,i);return(0,s.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"repl")," command starts a Scala REPL, which lets you interactively run your code and inspect its results:"),(0,s.kt)(l.v,{mdxType:"ChainedSnippets"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash",metastring:"ignore",ignore:!0},"scala-cli repl\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"},'scala> println("Hello Scala")\nHello Scala\n\nscala> :exit\n'))),(0,s.kt)("p",null,"Scala CLI by default uses the normal Scala REPL."),(0,s.kt)("p",null,"If you prefer to use the ",(0,s.kt)("a",{parentName:"p",href:"https://ammonite.io/#Ammonite-REPL"},"Ammonite REPL"),", specify ",(0,s.kt)("inlineCode",{parentName:"p"},"--amm")," to launch it rather than the default REPL:"),(0,s.kt)(l.v,{mdxType:"ChainedSnippets"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash",metastring:"ignore",ignore:!0},"scala-cli repl --amm\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"},'Loading...\nWelcome to the Ammonite Repl 2.4.0-23-76673f7f (Scala 3.0.2 Java 11.0.11)\n@ println("Hello ammonite")\nHello ammonite\n@ exit\nBye!\n'))),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"repl")," command accepts the same arguments as the ",(0,s.kt)("a",{parentName:"p",href:"/docs/commands/compile"},"compile")," command. It first compiles any provided sources, and then exposes those results and any provided dependencies to the REPL session:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-scala",metastring:"title=mylibrary/Messages.scala",title:"mylibrary/Messages.scala"},'package mylibrary\n\nobject Messages {\n  def message = "Hello"\n  def print(): Unit = println(message)\n}\n')),(0,s.kt)(l.v,{mdxType:"ChainedSnippets"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash",metastring:"ignore",ignore:!0},"scala-cli repl mylibrary/Messages.scala\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"},"Compiling project (Scala 3.0.2, JVM)\nCompiled project (Scala 3.0.2, JVM)\nscala> import mylibrary._\n\nscala> Messages.print()\nHello\n\nscala> :quit\n"))))}g.isMDXComponent=!0}}]);