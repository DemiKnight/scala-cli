"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[135],{9705:function(e,n,a){a.d(n,{m:function(){return s},v:function(){return l}});var t=a(7294),i=a(2004);function l(e){var n=e.children;return t.createElement("div",{className:"runnable-command"},n)}function s(e){var n=e.url;return t.createElement(i.Z,{playing:!0,loop:!0,muted:!0,controls:!0,width:"100%",height:"",url:n})}},3390:function(e,n,a){a.r(n),a.d(n,{assets:function(){return p},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return o},metadata:function(){return r},toc:function(){return d}});var t=a(3117),i=a(102),l=(a(7294),a(3905)),s=(a(9705),["components"]),o={title:"Managing dependencies",sidebar_position:3},c="Managing dependencies",r={unversionedId:"guides/dependencies",id:"guides/dependencies",title:"Managing dependencies",description:"Dependency syntax",source:"@site/docs/guides/dependencies.md",sourceDirName:"guides",slug:"/guides/dependencies",permalink:"/docs/guides/dependencies",draft:!1,editUrl:"https://github.com/Virtuslab/scala-cli/edit/main/website/docs/guides/dependencies.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Managing dependencies",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Configuration",permalink:"/docs/guides/configuration"},next:{title:"Updating dependencies",permalink:"/docs/guides/update-dependencies"}},p={},d=[{value:"Dependency syntax",id:"dependency-syntax",level:2},{value:"Excluding Transitive Dependencies",id:"excluding-transitive-dependencies",level:3},{value:"Dependency classifiers",id:"dependency-classifiers",level:3},{value:"Specifying dependencies from the command line",id:"specifying-dependencies-from-the-command-line",level:2}],u={toc:d};function m(e){var n=e.components,a=(0,i.Z)(e,s);return(0,l.kt)("wrapper",(0,t.Z)({},u,a,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"managing-dependencies"},"Managing dependencies"),(0,l.kt)("h2",{id:"dependency-syntax"},"Dependency syntax"),(0,l.kt)("p",null,"Dependencies are declared in Scala CLI according to the following format:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"groupID:artifactID:revision\n")),(0,l.kt)("p",null,"This is similar to how you declare dependencies in SBT with the ",(0,l.kt)("inlineCode",{parentName:"p"},"%")," character.\nFor example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"org.scala-lang.modules:scala-parallel-collections_2.13:1.0.4\n")),(0,l.kt)("p",null,"You can also skip explicitly stating the Scala version in the artifact name by repeating the ",(0,l.kt)("inlineCode",{parentName:"p"},":")," character after\nthe ",(0,l.kt)("inlineCode",{parentName:"p"},"groupID")," (similarly to how you can do the same with ",(0,l.kt)("inlineCode",{parentName:"p"},"%%")," in SBT). This is just a shortcut, Scala CLI will still add\nthe Scala version for you when fetching the dependency. Also, this only applies to Scala dependencies."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"org.scala-lang.modules::scala-parallel-collections:1.0.4\n")),(0,l.kt)("p",null,"Java and other non-scala dependencies follow the same syntax (without the ",(0,l.kt)("inlineCode",{parentName:"p"},"::")," for implicit Scala version, of course).\nFor example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"org.postgresql:postgresql:42.2.8\n")),(0,l.kt)("h3",{id:"excluding-transitive-dependencies"},"Excluding Transitive Dependencies"),(0,l.kt)("p",null,"To exclude a transitive dependency from a Scala CLI project use the ",(0,l.kt)("inlineCode",{parentName:"p"},"exclude")," parameter:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"exclude=org%%name")," - for Scala modules"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"exclude=org%name")," - for Java modules")),(0,l.kt)("p",null,"It requires passing the organization and module name of the dependency to be excluded. For example, let's say you have\nthe following Scala code:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala",metastring:"title=Main.scala",title:"Main.scala"},'//> using dep "com.lihaoyi::pprint:0.8.1"\nobject Main extends App {\n  println("Hello")\n}\n')),(0,l.kt)("p",null,"If you want to compile it with the ",(0,l.kt)("inlineCode",{parentName:"p"},"pprint")," library but exclude its ",(0,l.kt)("inlineCode",{parentName:"p"},"sourcecode")," dependency, you can use\nthe ",(0,l.kt)("inlineCode",{parentName:"p"},"exclude")," parameter as follows:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala",metastring:"title=Main.scala",title:"Main.scala"},'//> using dep "com.lihaoyi::pprint:0.8.1,exclude=com.lihaoyi%%sourcecode"\nobject Main extends App {\n  println("Hello")\n}\n')),(0,l.kt)("p",null,"To exclude Scala modules, you can also use a single ",(0,l.kt)("inlineCode",{parentName:"p"},"%")," but with the full name of the module name, like this:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala",metastring:"title=Main.scala",title:"Main.scala"},'//> using dep "com.lihaoyi::pprint:0.8.1,exclude=com.lihaoyi%sourcecode_3"\nobject Main extends App {\n  println("Hello")\n}\n')),(0,l.kt)("h3",{id:"dependency-classifiers"},"Dependency classifiers"),(0,l.kt)("p",null,"To specify a classifier of a dependency in a Scala CLI project, use the ",(0,l.kt)("inlineCode",{parentName:"p"},"classifier")," parameter:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"classifier={classifier_name}"))),(0,l.kt)("p",null,"If you want to use the ",(0,l.kt)("inlineCode",{parentName:"p"},"pytorch")," dependency with the classifier ",(0,l.kt)("inlineCode",{parentName:"p"},"linux-x86_64"),", use the ",(0,l.kt)("inlineCode",{parentName:"p"},"classifier")," parameter as follows:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala",metastring:"title=Main.scala",title:"Main.scala"},'//> using dep "org.bytedeco:pytorch:1.12.1-1.5.8,classifier=linux-x86_64"\nobject Main extends App {\n  println("Hello")\n}\n')),(0,l.kt)("h2",{id:"specifying-dependencies-from-the-command-line"},"Specifying dependencies from the command line"),(0,l.kt)("p",null,"You can add dependencies on the command line, with the ",(0,l.kt)("inlineCode",{parentName:"p"},"--dependency")," option:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala",metastring:"title=Sample.sc",title:"Sample.sc"},'println("Hello")\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"scala-cli compile Sample.sc \\\n  --dependency org.scala-lang.modules::scala-parallel-collections:1.0.4\n")),(0,l.kt)("p",null,"You can also add a URL fallback for a JAR dependency, if it can't be fetched otherwise:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash",metastring:"ignore",ignore:!0},'scala-cli compile Sample.sc \\\n  -- dependency "org::name::version,url=https://url-to-the-jar"\n')),(0,l.kt)("p",null,"Note that ",(0,l.kt)("inlineCode",{parentName:"p"},"--dependency")," is only meant as a convenience. You should favor adding dependencies in the sources themselves\nvia ",(0,l.kt)("a",{parentName:"p",href:"/docs/guides/configuration#special-imports"},"using directives"),". However, the ",(0,l.kt)("inlineCode",{parentName:"p"},"--dependency")," CLI option takes\nprecedence over ",(0,l.kt)("inlineCode",{parentName:"p"},"using")," directives, so it can be used to override a ",(0,l.kt)("inlineCode",{parentName:"p"},"using")," directive, such as when you want to work\nwith a different dependency version."),(0,l.kt)("p",null,"You can also add repositories on the command-line, via ",(0,l.kt)("inlineCode",{parentName:"p"},"--repository"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash",metastring:"ignore",ignore:!0},"scala-cli compile Sample.sc \\\n  --dependency com.pany::util:33.1.0 --repo https://artifacts.pany.com/maven\n")),(0,l.kt)("p",null,"Lastly, you can also add simple JAR files as dependencies with ",(0,l.kt)("inlineCode",{parentName:"p"},"--jar"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash",metastring:"ignore",ignore:!0},"scala-cli compile Sample.sc --jar /path/to/library.jar\n")))}m.isMDXComponent=!0}}]);