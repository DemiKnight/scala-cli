"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3289],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(n),m=a,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6984:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return u}});var r=n(3117),a=n(102),o=(n(7294),n(3905)),i=["components"],s={title:"Password options \u26a1\ufe0f",sidebar_position:8},l=void 0,p={unversionedId:"reference/password-options",id:"reference/password-options",title:"Password options \u26a1\ufe0f",description:"The export sub-command is restricted and requires setting the --power option to be used.",source:"@site/docs/reference/password-options.md",sourceDirName:"reference",slug:"/reference/password-options",permalink:"/docs/reference/password-options",draft:!1,editUrl:"https://github.com/Virtuslab/scala-cli/edit/main/website/docs/reference/password-options.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{title:"Password options \u26a1\ufe0f",sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"Supported scala versions",permalink:"/docs/reference/scala-versions"},next:{title:"Proxy authentication",permalink:"/docs/reference/proxy-authentication"}},c={},u=[{value:"Environment variable",id:"environment-variable",level:2},{value:"Command printing the secret",id:"command-printing-the-secret",level:2},{value:"File",id:"file",level:2},{value:"Inline",id:"inline",level:2}],d={toc:u};function m(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"The ",(0,o.kt)("inlineCode",{parentName:"p"},"export")," sub-command is restricted and requires setting the ",(0,o.kt)("inlineCode",{parentName:"p"},"--power")," option to be used.\nYou can pass it explicitly or set it globally by running:"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre"},"scala-cli config power true\n"))),(0,o.kt)("p",null,"Some Scala CLI options expect password / secret values. Passing passwords directly on the command-line\nposes security issues, so Scala CLI offers a few ways to work around that.\nPasswords / secrets can be passed: via environment variables, via a command printing the secret, via a file, or (not recommended)\ninline."),(0,o.kt)("h2",{id:"environment-variable"},"Environment variable"),(0,o.kt)("p",null,"Prefix the environment variable name with ",(0,o.kt)("inlineCode",{parentName:"p"},"env:"),", like"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},"$ export MY_PASSWORD=1234\n$ scala-cli publish . --repo-password env:MY_PASSWORD\n")),(0,o.kt)("h2",{id:"command-printing-the-secret"},"Command printing the secret"),(0,o.kt)("p",null,"Prefix the command printing the secret with ",(0,o.kt)("inlineCode",{parentName:"p"},"command:"),", like"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},'$ get-secret sonatype-s01 # command printing the secret\n1234\n$ scala-cli publish . --repo-password "command:get-secret sonatype-s01"\n')),(0,o.kt)("p",null,"Alternatively, if some of the command arguments contain spaces, one can pass a JSON list:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},'$ get-secret "sonatype s01" # command printing the secret\n1234\n$ scala-cli publish . --repo-password \'command:["get-secret", "sonatype s01"]\'\n')),(0,o.kt)("h2",{id:"file"},"File"),(0,o.kt)("p",null,"Prefix the file path with ",(0,o.kt)("inlineCode",{parentName:"p"},"file:"),", like"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},'$ cat "$HOME/.passwords/sonatype-s01"\n1234\n$ scala-cli publish . --repo-password "file:$HOME/.passwords/sonatype-s01"\n')),(0,o.kt)("h2",{id:"inline"},"Inline"),(0,o.kt)("p",null,"This is the less secure way of passing secrets to Scala CLI, and should only be used\nfor debugging purposes, with non-sensitive secrets. Prefix the password / secret value\nwith ",(0,o.kt)("inlineCode",{parentName:"p"},"value:"),", like"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},"$ scala-cli publish . --repo-password value:1234\n")))}m.isMDXComponent=!0}}]);